[{"E:\\Mentor-Platform\\FrontEnd\\src\\index.js":"1","E:\\Mentor-Platform\\FrontEnd\\src\\reportWebVitals.js":"2","E:\\Mentor-Platform\\FrontEnd\\src\\App.js":"3","E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Layout\\Layout.js":"4","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Login.js":"5","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Login.js":"6","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\FindMentor.js":"7","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Home\\Home.js":"8","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\SignUp.js":"9","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\SignUp.js":"10","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\DataScience.js":"11","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\ProductManagement.js":"12","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\All.js":"13","E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Auxillary\\Auxillary.js":"14","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\UxDesign.js":"15","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js":"16","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Footer\\Footer.js":"17","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Header\\Header.js":"18","E:\\Mentor-Platform\\FrontEnd\\src\\Test.js":"19","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\CardDesign.js":"20","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Profile.js":"21","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Request.js":"22","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Dashboard.js":"23","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\BookingConfirm.js":"24","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\ResetPassword.js":"25","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\ResetPassword.js":"26","E:\\MyMentor\\client\\src\\index.js":"27","E:\\MyMentor\\client\\src\\reportWebVitals.js":"28","E:\\MyMentor\\client\\src\\App.js":"29","E:\\MyMentor\\client\\src\\hoc\\Layout\\Layout.js":"30","E:\\MyMentor\\client\\src\\components\\Mentor\\ResetPassword.js":"31","E:\\MyMentor\\client\\src\\components\\Home\\Home.js":"32","E:\\MyMentor\\client\\src\\components\\Mentee\\SignUp.js":"33","E:\\MyMentor\\client\\src\\components\\Mentee\\ResetPassword.js":"34","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\FindMentor.js":"35","E:\\MyMentor\\client\\src\\components\\Mentee\\BookingConfirm.js":"36","E:\\MyMentor\\client\\src\\components\\Mentor\\SignUp.js":"37","E:\\MyMentor\\client\\src\\components\\Mentor\\Login.js":"38","E:\\MyMentor\\client\\src\\components\\Mentee\\Request.js":"39","E:\\MyMentor\\client\\src\\components\\Mentor\\Profile.js":"40","E:\\MyMentor\\client\\src\\components\\Mentee\\Login.js":"41","E:\\MyMentor\\client\\src\\components\\Mentor\\Dashboard.js":"42","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\DataScience.js":"43","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\ProductManagement.js":"44","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\All.js":"45","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js":"46","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\UxDesign.js":"47","E:\\MyMentor\\client\\src\\hoc\\Auxillary\\Auxillary.js":"48","E:\\MyMentor\\client\\src\\components\\Footer\\Footer.js":"49","E:\\MyMentor\\client\\src\\components\\Header\\Header.js":"50","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\CardDesign.js":"51","E:\\MyMentor\\client\\src\\hoc\\Loader.js":"52"},{"size":885,"mtime":1610374087727,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1610374087727,"results":"55","hashOfConfig":"54"},{"size":1877,"mtime":1611428092535,"results":"56","hashOfConfig":"54"},{"size":424,"mtime":1610374087726,"results":"57","hashOfConfig":"54"},{"size":9447,"mtime":1611428484047,"results":"58","hashOfConfig":"54"},{"size":9334,"mtime":1611428323788,"results":"59","hashOfConfig":"54"},{"size":3173,"mtime":1611148451479,"results":"60","hashOfConfig":"54"},{"size":7628,"mtime":1610899086352,"results":"61","hashOfConfig":"54"},{"size":9037,"mtime":1611428549789,"results":"62","hashOfConfig":"54"},{"size":8091,"mtime":1611428420019,"results":"63","hashOfConfig":"54"},{"size":1441,"mtime":1611428213637,"results":"64","hashOfConfig":"54"},{"size":1444,"mtime":1611428252785,"results":"65","hashOfConfig":"54"},{"size":1347,"mtime":1611392818345,"results":"66","hashOfConfig":"54"},{"size":56,"mtime":1610374087726,"results":"67","hashOfConfig":"54"},{"size":1435,"mtime":1611428284470,"results":"68","hashOfConfig":"54"},{"size":1461,"mtime":1611428266739,"results":"69","hashOfConfig":"54"},{"size":3181,"mtime":1610899402096,"results":"70","hashOfConfig":"54"},{"size":8982,"mtime":1611428295013,"results":"71","hashOfConfig":"54"},{"size":2471,"mtime":1610374087704,"results":"72","hashOfConfig":"54"},{"size":14915,"mtime":1611397047756,"results":"73","hashOfConfig":"54"},{"size":14361,"mtime":1611428520394,"results":"74","hashOfConfig":"54"},{"size":10295,"mtime":1611428386438,"results":"75","hashOfConfig":"54"},{"size":17030,"mtime":1611428457274,"results":"76","hashOfConfig":"54"},{"size":2458,"mtime":1611428687742,"results":"77","hashOfConfig":"54"},{"size":4631,"mtime":1611428625589,"results":"78","hashOfConfig":"54"},{"size":4629,"mtime":1611428650010,"results":"79","hashOfConfig":"54"},{"size":852,"mtime":1611428761000,"results":"80","hashOfConfig":"81"},{"size":362,"mtime":1611428761000,"results":"82","hashOfConfig":"81"},{"size":1828,"mtime":1611428761000,"results":"83","hashOfConfig":"81"},{"size":407,"mtime":1611428761000,"results":"84","hashOfConfig":"81"},{"size":4507,"mtime":1611428761000,"results":"85","hashOfConfig":"81"},{"size":7442,"mtime":1611428761000,"results":"86","hashOfConfig":"81"},{"size":7876,"mtime":1611428761000,"results":"87","hashOfConfig":"81"},{"size":4509,"mtime":1611428761000,"results":"88","hashOfConfig":"81"},{"size":3083,"mtime":1611428761000,"results":"89","hashOfConfig":"81"},{"size":2394,"mtime":1611428761000,"results":"90","hashOfConfig":"81"},{"size":8804,"mtime":1611428761000,"results":"91","hashOfConfig":"81"},{"size":9205,"mtime":1611478986782,"results":"92","hashOfConfig":"81"},{"size":10060,"mtime":1611428761000,"results":"93","hashOfConfig":"81"},{"size":14351,"mtime":1611481714892,"results":"94","hashOfConfig":"81"},{"size":9094,"mtime":1611428761000,"results":"95","hashOfConfig":"81"},{"size":16673,"mtime":1611428761000,"results":"96","hashOfConfig":"81"},{"size":1919,"mtime":1611478467696,"results":"97","hashOfConfig":"81"},{"size":1920,"mtime":1611478475337,"results":"98","hashOfConfig":"81"},{"size":1825,"mtime":1611478458974,"results":"99","hashOfConfig":"81"},{"size":1914,"mtime":1611478352559,"results":"100","hashOfConfig":"81"},{"size":1881,"mtime":1611478282137,"results":"101","hashOfConfig":"81"},{"size":55,"mtime":1611428761000,"results":"102","hashOfConfig":"81"},{"size":3086,"mtime":1611428761000,"results":"103","hashOfConfig":"81"},{"size":8772,"mtime":1611428761000,"results":"104","hashOfConfig":"81"},{"size":14620,"mtime":1611428761000,"results":"105","hashOfConfig":"81"},{"size":317,"mtime":1611477583887,"results":"106","hashOfConfig":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"o4womm",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"109"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"cvzp5u",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"164"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"164"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"164"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"164"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"164"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"E:\\Mentor-Platform\\FrontEnd\\src\\index.js",[],["229","230"],"E:\\Mentor-Platform\\FrontEnd\\src\\reportWebVitals.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\App.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Layout\\Layout.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Login.js",["231"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Login.js",["232"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\FindMentor.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Home\\Home.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\SignUp.js",["233"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\SignUp.js",["234"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\DataScience.js",["235","236"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\ProductManagement.js",["237","238"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\All.js",["239","240"],"import React, {useState, useEffect} from 'react';\r\nimport Design from '../Find-My-Mentor/CardDesign'\r\nimport axios from \"axios\";\r\n\r\nconst All = (props) => {\r\n   const [mentorData, selectMentorData] = useState();\r\n   let ProfileData;\r\n    useEffect(() => {\r\n        getMentorData();\r\n    }, []);\r\n\r\n    const getMentorData = () => {\r\n        const id = localStorage.getItem('Mentorid');\r\n        const token= localStorage.getItem('Mentortoken')\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'token': token\r\n        };\r\n        axios.get('/all/mentor')\r\n            .then(function (response) {\r\n                selectMentorData(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    if(mentorData!==undefined)\r\n    {\r\n            ProfileData = mentorData.map((index) => {\r\n            return (\r\n                <Design\r\n                keyId={index.id}\r\n                name={index.name}\r\n                image={index.profile_picture}\r\n                bio={index.bio}\r\n                price={index.price}\r\n                skills={index.tags}\r\n                position={index.job_title}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>{ProfileData}</div>\r\n    )\r\n}\r\nexport default All;","E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Auxillary\\Auxillary.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\UxDesign.js",["241","242"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js",["243","244"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Footer\\Footer.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Header\\Header.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\Test.js",[],["245","246"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\CardDesign.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Profile.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Request.js",["247"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Dashboard.js",["248","249"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\BookingConfirm.js",["250"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\ResetPassword.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\ResetPassword.js",[],"E:\\MyMentor\\client\\src\\index.js",[],["251","252"],"E:\\MyMentor\\client\\src\\reportWebVitals.js",[],"E:\\MyMentor\\client\\src\\App.js",[],"E:\\MyMentor\\client\\src\\hoc\\Layout\\Layout.js",[],"E:\\MyMentor\\client\\src\\components\\Mentor\\ResetPassword.js",[],"E:\\MyMentor\\client\\src\\components\\Home\\Home.js",[],"E:\\MyMentor\\client\\src\\components\\Mentee\\SignUp.js",["253"],"import React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport axios from \"axios\";\nimport { FormControl, TextField, Button, Typography, Grid, Container } from '@material-ui/core';\nimport Mentor from '../../assets/images/men-sign.jpg'\nconst Signup = (props) => {\n    const menteeData = {\n        name: '',\n        email: '',\n        password: '',\n        linkedInUrl: '',\n        error: false,\n        errorEmail: false,\n        errorPass: false,\n        name_error_text: null,\n        email_error_text: null,\n        password_error_text: null,\n\n    };\n    const [formData, setFormData] = useState(menteeData);\n    const [validEmail, setValidEmail] = useState(false);\n    const [validPass, setValidPass] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n    useEffect(() => {\n        HandleButton();\n    }, [validEmail, validPass]);\n\n    const HandleButton = () => {\n        if (validEmail && validPass)\n            setBtnDisabled(false);\n    }\n    const RegisterButton = () => {\n        const data = {\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            linkedin: formData.linkedInUrl\n        }\n      \n        axios.post('/register/mentee', data)\n            .then(function (response) {\n               \n                localStorage.setItem('Menteetoken', response.data.token);\n                localStorage.setItem('Menteeid', response.data.user_data.id);\n                props.history.push('/');\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    const RedirectToMentor = () => {\n        props.history.push('/mentor-register');\n    }\n\n\n    const handleTextChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.id]: event.target.value\n        });\n    };\n    const ValidateName = () => {\n        if (formData.name === \"\") {\n            setFormData({\n                ...formData,\n                error: true,\n                name_error_text: \"You must provide a name\"\n            });\n        }\n    }\n    const ValidatePass = () => {\n        if (formData.password === \"\" || !formData.password) {\n            setFormData({\n                ...formData,\n                password_error_text: null\n            });\n        } else {\n            if (formData.password.length >= 6) {\n                setValidPass(true);\n                setFormData({\n                    ...formData,\n                    password_error_text: null,\n                    errorPass: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    password_error_text: \"Your password must be at least 6 characters\",\n                    errorPass: true,\n                });\n            }\n        }\n    }\n\n    const ValidateEmail = () => {\n        if (formData.email === \"\") {\n            setFormData({\n                ...formData,\n                email_error_text: null\n            });\n        } else {\n            if (validator.isEmail(formData.email)) {\n                setValidEmail(true);\n                setFormData({\n                    ...formData,\n                    email_error_text: null,\n                    errorEmail: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    email_error_text: \"Sorry, this is not a valid email\",\n                    errorEmail: true\n                });\n            }\n        }\n    }\n\n    return (\n\n        <Container>\n            <Grid container spacing={4}>\n                <Grid item container sm={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography color=\"primary\" variant=\"h4\">Sign up as a Mentee</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"name\"\n                                label=\"Name\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                error={formData.error}\n                                value={formData.name}\n                                helperText={formData.name_error_text}\n                                onBlur={ValidateName}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"email\"\n                                label=\"E-mail\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                helperText={formData.email_error_text}\n                                error={formData.errorEmail}\n                                value={formData.email}\n                                onChange={handleTextChange}\n                                onBlur={ValidateEmail}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"password\"\n                                label=\"Password\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                helperText={formData.password_error_text}\n                                error={formData.errorPass}\n                                value={formData.password}\n                                onChange={handleTextChange}\n                                onBlur={ValidatePass}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n\n                                id=\"linkedInUrl\"\n                                label=\"LinkedIn Url\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                value={formData.linkedInUrl}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item container justify=\"center\" sm={9} >\n                        <Grid item   >\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={RegisterButton}>Sign Up</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\n\n                    <Grid item xs={12} sm={6}>\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentor?</Typography>\n                    </Grid>\n\n                    <Grid item xs={12} sm={9}>\n                        <img alt=\"complex\" src={Mentor} style={{ maxWidth: \"75%\" }} />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Sign Up here</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n\n\n\n    )\n}\nexport default Signup;","E:\\MyMentor\\client\\src\\components\\Mentee\\ResetPassword.js",[],"E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\FindMentor.js",[],"E:\\MyMentor\\client\\src\\components\\Mentee\\BookingConfirm.js",["254"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Done from '../../assets/images/Done.svg';\nimport Meeting from '../../assets/images/MeetingSchedule.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    imgMentee: {\n        maxWidth: '80%'\n    },\n    imgGrad: {\n        maxWidth: '70%'\n    }\n}));\nconst Booking = (props) => {\n    const { history } = props;\n    const classes = useStyles();\n    return (\n        <Container>\n\n            <Grid container spacing={4}>\n                <Grid item container direction=\"column\" spacing={2}>\n                    <Grid item>\n                        <Typography color=\"primary\" variant=\"h5\">Congratulations, Everything is done</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography color=\"primary\" variant=\"h6\">Just relax and wait for the slot</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography color=\"primary\" variant=\"h6\">We will send you a confirmation email with the meeting link</Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid item container spacing={2}>\n                    <Grid item sm={2}>\n                        <Button variant=\"contained\" color=\"primary\" >Reschedule</Button>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"contained\" color=\"primary\" >Proceed</Button>\n                    </Grid>\n                </Grid>\n\n\n                <Grid item container spacing={2}>\n                    <Grid item container sm={6} xs={12} >\n                        <Grid item>\n                            <img alt=\"complex\" src={Done} className={classes.imgMentee} />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container sm={6} xs={12} justify=\"center\" alignContent=\"center\">\n                        <Grid item   >\n                            <img alt=\"complex\" src={Meeting} className={classes.imgGrad} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n}\nexport default Booking;","E:\\MyMentor\\client\\src\\components\\Mentor\\SignUp.js",["255"],"import React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport { FormControl, TextField, Button, Typography, Grid, Container } from '@material-ui/core';\nimport axios from \"axios\";\nimport Mentor from '../../assets/images/men-sign.jpg'\nconst Signup = (props) => {\n    const menteeData = {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        error: false,\n        errorEmail: false,\n        errorPass: false,\n        errorConfirmPass: false,\n        name_error_text: null,\n        email_error_text: null,\n        password_error_text: null,\n        confirm_password_error_text: null,\n\n\n    };\n    const [formData, setFormData] = useState(menteeData);\n    const [validEmail, setValidEmail] = useState(false);\n    const [validPass, setValidPass] = useState(false);\n    const [validConfirmPass, setValidConfirmPass] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n\n    useEffect(() => {\n        HandleButton();\n    }, [validEmail, validPass,validConfirmPass]);\n\n    const HandleButton = () => {\n        if (validEmail && validPass && validConfirmPass)\n            setBtnDisabled(false);\n    }\n\n    const handleTextChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.id]: event.target.value\n        });\n    };\n    const ValidateName = () => {\n        if (formData.name === \"\") {\n            setFormData({\n                ...formData,\n                error: true,\n                name_error_text: \"You must provide a name\"\n            });\n        }\n    }\n    const ValidatePass = () => {\n        if (formData.password === \"\" || !formData.password) {\n            setFormData({\n                ...formData,\n                password_error_text: null\n            });\n        } else {\n            if (formData.password.length >= 6) {\n                setValidPass(true);\n                setFormData({\n                    ...formData,\n                    password_error_text: null,\n                    errorPass: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    password_error_text: \"Your password must be at least 6 characters\",\n                    errorPass: true,\n                });\n            }\n        }\n    }\n    const RedirectToProfile = () => {\n        const data = {\n            name: formData.name,\n            email: formData.email,\n            password: formData.password\n        }\n       \n        axios.post('/register/mentor', data)\n            .then(function (response) {\n               \n                localStorage.setItem('Mentortoken', response.data.token);\n                localStorage.setItem('Mentorid', response.data.user_data.id);\n                props.history.push('/mentor-profile');\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n      \n    }\n    const ValidateEmail = () => {\n        if (formData.email === \"\") {\n            setFormData({\n                ...formData,\n                email_error_text: null\n            });\n        } else {\n            if (validator.isEmail(formData.email)) {\n                setValidEmail(true);\n                setFormData({\n                    ...formData,\n                    email_error_text: null,\n                    errorEmail: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    email_error_text: \"Sorry, this is not a valid email\",\n                    errorEmail: true\n                });\n            }\n        }\n    }\n    const MatchPass = () => {\n        if (formData.password !== formData.confirmPassword) {\n            setFormData({\n                ...formData,\n                confirm_password_error_text: \"Sorry, Password donot match\",\n                errorConfirmPass: true\n            });\n        } else {\n            setValidConfirmPass(true);\n            setFormData({\n                ...formData,\n                confirm_password_error_text: null,\n                errorConfirmPass:false\n            });\n        }\n    }\n    const RedirectToMentee = () => {\n        props.history.push('/mentee-register');\n    }\n    return (\n        <Container>\n            <Grid container spacing={4}>\n                <Grid item container sm={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography color=\"primary\" variant=\"h4\">Sign up as a Mentor</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"name\"\n                                label=\"Name\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                error={formData.error}\n                                value={formData.name}\n                                helperText={formData.name_error_text}\n                                onBlur={ValidateName}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"email\"\n                                label=\"E-mail\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                helperText={formData.email_error_text}\n                                error={formData.errorEmail}\n                                value={formData.email}\n                                onChange={handleTextChange}\n                                onBlur={ValidateEmail}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"password\"\n                                label=\"Password\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                helperText={formData.password_error_text}\n                                error={formData.errorPass}\n                                value={formData.password}\n                                onChange={handleTextChange}\n                                onBlur={ValidatePass}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                helperText={formData.confirm_password_error_text}\n                                error={formData.errorConfirmPass}\n                                value={formData.confirmPassword}\n                                onChange={handleTextChange}\n                                onBlur={MatchPass}\n\n\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item container justify=\"center\" sm={9} >\n                        <Grid item   >\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={RedirectToProfile}>Sign Up</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\n\n                    <Grid item xs={12} sm={6}>\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentee?</Typography>\n                    </Grid>\n\n                    <Grid item xs={12} sm={9}>\n                        <img alt=\"complex\" src={Mentor} style={{ maxWidth: \"75%\" }} />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentee}>Sign Up here</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\nexport default Signup;","E:\\MyMentor\\client\\src\\components\\Mentor\\Login.js",["256"],"import React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport { FormControl, TextField, Grid, Container, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport axios from \"axios\";\nimport Students from '../../assets/images/students.png'\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nconst Login = (props) => {\n    const menteeData = {\n        email: '',\n        password: '',\n        errorEmail: false,\n        errorPass: false,\n        email_error_text: null,\n        password_error_text: null,\n\n    };\n    const [EmailData, setEmailData] = useState();\n    const [formData, setFormData] = useState(menteeData);\n    const [validEmail, setValidEmail] = useState(false);\n    const [validPass, setValidPass] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n    const [open, setOpen] = useState(false);\n    useEffect(() => {\n        HandleButton();\n    }, [validEmail, validPass]);\n\n    const HandleButton = () => {\n        if (validEmail && validPass)\n            setBtnDisabled(false);\n    }\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = (value) => {\n        setOpen(false);\n\n    };\n    const Login = () => {\n        const data = {\n            email: formData.email,\n            password: formData.password\n        }\n      \n        axios.post('/login/mentor', data)\n            .then(function (response) {\n               \n                localStorage.setItem('Mentortoken', response.data.token);\n                localStorage.setItem('Mentorid', response.data.user_data.id);\n                response.data.user_data.status ? props.history.push('/mentee-req') : props.history.push('/mentor-profile');\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const RedirectToMentor = () => {\n        props.history.push('/mentee-login');\n    }\n\n\n    const handleTextChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.id]: event.target.value\n        });\n    };\n    const handleForgotEmail = (event) => {\n        setEmailData(event.target.value);\n       \n    };\n    const ValidatePass = () => {\n        if (formData.password === \"\" || !formData.password) {\n            setFormData({\n                ...formData,\n                password_error_text: null\n            });\n        } else {\n            if (formData.password.length >= 6) {\n                setValidPass(true);\n                setFormData({\n                    ...formData,\n                    password_error_text: null,\n                    errorPass: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    password_error_text: \"Your password must be at least 6 characters\",\n                    errorPass: true,\n                });\n            }\n        }\n    }\n\n    const ValidateEmail = () => {\n       \n        if (formData.email === \"\") {\n            setFormData({\n                ...formData,\n                email_error_text: null\n            });\n        } else {\n            if (validator.isEmail(formData.email)) {\n                setValidEmail(true);\n                setFormData({\n                    ...formData,\n                    email_error_text: null,\n                    errorEmail: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    email_error_text: \"Sorry, this is not a valid email\",\n                    errorEmail: true\n                });\n            }\n        }\n    }\n    const ForgotPassword = () => {\n        const data = {\n            email: EmailData,\n        }\n       \n        axios.post('/mentor/send-email', data)\n            .then(function (response) {\n              \n                setOpen(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    return (\n\n        <React.Fragment>\n            <Container>\n                <Grid container spacing={4}>\n                    <Grid item container sm={6} spacing={4} alignItems=\"center\" style={{ alignContent: \"center\" }}>\n                        <Grid item xs={12}>\n                            <Typography color=\"primary\" variant=\"h4\">Login as a Mentor</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={9}>\n                            <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                                <TextField\n                                    required\n                                    id=\"email\"\n                                    label=\"E-mail\"\n                                    color=\"primary\"\n                                    variant=\"filled\"\n                                    helperText={formData.email_error_text}\n                                    error={formData.errorEmail}\n                                    value={formData.email}\n                                    onChange={handleTextChange}\n                                    onBlur={ValidateEmail}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={9}>\n                            <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                                <TextField\n                                    required\n                                    id=\"password\"\n                                    label=\"Password\"\n                                    color=\"primary\"\n                                    variant=\"filled\"\n                                    helperText={formData.password_error_text}\n                                    error={formData.errorPass}\n                                    value={formData.password}\n                                    onChange={handleTextChange}\n                                    onBlur={ValidatePass}\n                                />\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item container justify=\"center\" sm={9} direction=\"column\" alignItems=\"center\" spacing={1}>\n                            <Grid item   >\n                                <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={Login}>Login</Button>\n                            </Grid>\n                            <Grid item   >\n                                <Button variant=\"text\" color=\"primary\" onClick={handleClickOpen}>Forgot Password?</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\n\n                        <Grid item xs={12} sm={6}>\n                            <Typography color=\"primary\" variant=\"h5\">Are You a Mentee?</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={9}>\n                            <img alt=\"complex\" src={Students} style={{ maxWidth: \"75%\" }} />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Login here</Button>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Dialog\n                open={open}\n                onClose={handleClose}>\n                <DialogTitle disableTypography style={{ backgroundColor: 'beige' }}>\n                    <div style={{ display: 'flex' }}>\n                        < CheckCircleSharpIcon color=\"primary\" style={{ width: '2em', height: '3em', paddingRight: '10px' }} />\n                        <h2>Enter The Email To Get The Reset Link</h2>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText >\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"Forgotemail\"\n                                label=\"E-mail\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                value={EmailData}\n                                onChange={handleForgotEmail}\n                            />\n                        </FormControl>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <Button onClick={() => handleClose('close')} color=\"primary\" variant='outlined'>\n                        Close\n                        </Button>\n\n                    <Button onClick={ForgotPassword} color=\"primary\" variant='outlined'>\n                        Send Reset Link\n                       </Button>\n\n\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\nexport default Login;","E:\\MyMentor\\client\\src\\components\\Mentee\\Request.js",["257"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, Grid, Container, Dialog, Paper, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport PublicIcon from '@material-ui/icons/Public';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport axios from \"axios\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#F1F9FF'\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n\n\n        [theme.breakpoints.down('sm')]: {\n            width: theme.spacing(8),\n            height: theme.spacing(8),\n        },\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n\n\n    },\n    successBtn: {\n        backgroundColor: '#4caf50',\n    },\n    paymentDir: {\n        justifyContent: 'flex-end',\n        [theme.breakpoints.down('sm')]: {\n            justifyContent: 'center'\n        },\n    },\n    borderStyling: {\n        borderWidth: '1px',\n        borderStyle: 'inset',\n        padding: '3px',\n        backgroundColor: '#FFFFFF'\n    }\n}));\n\nconst MenteeReq = (props) => {\n    const Mentortoken = localStorage.getItem('Mentortoken');\n    const MentorId = localStorage.getItem(\"Mentorid\");\n    let headers = {\n        'Content-Type': 'application/json',\n        'token': Mentortoken\n    };\n    const classes = useStyles();\n    const [SlotData, setSlotData] = useState();\n    const [open, setOpen] = useState(false);\n    const [slot, setSlot] = useState(false);\n    useEffect(() => {\n        getMenteeData();\n    }, [slot]);\n    const getMenteeData = () => {\n        axios.get('/mentorinfo/' + MentorId, {\n            headers: headers\n        })\n            .then(function (response) {\n                if (response.data.length === 0) {\n                    handleClickOpen();\n                }\n                else {\n                    let data = [];\n                    for (let i = 0; i < response.data.length; i++) {\n                        let dateTime = response.data[i].call_time;\n                        let eventdate = response.data[i].call_time;\n                        eventdate = eventdate.replace('\"', '');\n                        eventdate = eventdate.replace('\"', '');\n                        dateTime = dateTime.replace('\"', '');\n                        dateTime = dateTime.replace('\"', '');\n                        dateTime = new Date(dateTime)\n                        let mn = dateTime.getMonth();\n                        let dt = dateTime.getDate();\n                        let hr = dateTime.getHours();\n                        let min = dateTime.getMinutes();\n                        data.push({\n                            callId: response.data[i].call_id,\n                            DateTime: { month: mn + 1, date: dt, hour: hr, min: min },\n                            name: capitalize(response.data[i].mentee_name),\n                            mentorEmail: response.data[i].mentor_email,\n                            menteeEmail: response.data[i].mentee_email,\n                            eventDate: eventdate,\n                            mentorName: capitalize(response.data[i].mentor_name),\n\n                        });\n                    }\n                    setSlotData(data);\n                }\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = (value) => {\n        setOpen(false);\n        props.history.push('/');\n    };\n\n    const onAcceptReq = (event, callId) => {\n        let eventSlots = SlotData.filter(function (e) {\n            return e.callId === callId;\n        });\n\n        axios.get('/menteeRequest/' + callId, {\n            headers: headers\n        })\n            .then(function (response) {\n                setSlot(!slot);\n                let data = {\n                    date: eventSlots[0].eventDate,\n                    mentor_name: eventSlots[0].mentorName,\n                    mentee_name: eventSlots[0].name,\n                    mentor_email: eventSlots[0].mentorEmail,\n                    mentee_email: eventSlots[0].menteeEmail\n                }\n                axios.post('/events', data).then(function (res) {\n                }).catch(function(error){\n                    console.log('err', error);\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const renderReq = () => {\n        if (SlotData) {\n            return SlotData.map((data, id) => {\n                return (\n                    <Grid container sm={12} justify=\"center\" spacing={6}>\n                        <Grid item sm={6} >\n                            <Paper style={{ display: \"flex\", flexDirection: 'column' }} classes={{ root: classes.root }}>\n                                <Container>\n                                    <Grid item container direction=\"row\" style={{ marginTop: \"15px\" }} justify=\"space-between\">\n                                        <Grid item sm={4} >\n                                            <Typography color=\"primary\" variant=\"h6\">{data.name}</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            {data.DateTime.min.toString().length === 1 ? (<Typography color=\"primary\" className={classes.borderStyling}> {data.DateTime.date}/{data.DateTime.month}-{'   '}{data.DateTime.hour}:0{data.DateTime.min}</Typography>) :\n                                                (<Typography color=\"primary\" className={classes.borderStyling}>{data.DateTime.date}/{data.DateTime.month}-{'   '}{data.DateTime.hour}:{data.DateTime.min}</Typography>)}\n\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography color=\"primary\" variant=\"h6\">Student</Typography>\n                                    </Grid>\n                                    <Grid item sm={12} >\n                                        <Typography color=\"primary\" >Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</Typography>\n                                    </Grid>\n                                    <Grid item container direction=\"row\" style={{ margin: \"15px 0 15px 0\" }}>\n                                        <Grid item container sm={6} xs={6} direction=\"row\" justify=\"space-between\">\n                                            <Grid item>\n                                                <InstagramIcon />\n                                            </Grid>\n                                            <Grid item>\n                                                <FacebookIcon />\n                                            </Grid>\n                                            <Grid item>\n                                                <TwitterIcon />\n                                            </Grid>\n                                            <Grid item>\n                                                <PublicIcon />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                            </Paper>\n                        </Grid>\n                        <Grid item container sm={4} direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                            <Grid item >\n                                <Button classes={{ containedPrimary: classes.successBtn }} variant=\"contained\" color=\"primary\" onClick={e => onAcceptReq(e, data.callId)}>Accept</Button>\n                            </Grid>\n                            <Grid item >\n                                <Button variant=\"contained\" color=\"primary\" >Ask to reschedule</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )\n\n            });\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Container style={{ marginBottom: \"40px\", minHeight: \"357px\" }}>\n                {renderReq()}\n            </Container>\n\n            <Dialog\n                open={open}\n                onClose={handleClose}>\n                <DialogTitle disableTypography style={{ backgroundColor: 'beige' }}>\n                    <div style={{ display: 'flex' }}>\n                        < CheckCircleSharpIcon color=\"primary\" style={{ width: '2em', height: '3em', paddingRight: '10px' }} />\n                        <h2>You Don't Have Any Active Mentee Request</h2>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText >\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <h2>Please Wait till someone book's a seesion with you</h2>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Button onClick={() => handleClose('close')} color=\"primary\" variant='outlined'>\n                        Close\n                        </Button>\n\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n\n\n\n\n\n    )\n}\nexport default MenteeReq;","E:\\MyMentor\\client\\src\\components\\Mentor\\Profile.js",["258"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n    FormControl, TextField, Button, Typography, Grid, Container, Avatar, IconButton,\n    List,\n    ListItem,\n    ListItemSecondaryAction\n} from '@material-ui/core';\n\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport DateFnsUtils from '@date-io/date-fns';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#F1F9FF'\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    successBtn: {\n        backgroundColor: '#4caf50',\n    },\n    paymentDir: {\n        justifyContent: 'flex-end',\n        [theme.breakpoints.down('sm')]: {\n            justifyContent: 'center'\n        },\n    },\n    borderStyling: {\n        borderWidth: '1px',\n        borderStyle: 'inset',\n        padding: '3px',\n        backgroundColor: '#FFFFFF'\n    }\n}));\nconst MentorProfile = (props) => {\n    const classes = useStyles();\n    const menteeData = {\n        jobTitle: '',\n        pricePerSession: '',\n        bio: '',\n        company: '',\n        tags: '',\n        experience: '',\n        graduatedAt: '',\n        mobileNumber: '',\n        timeDate: ''\n    };\n\n    const roleCategory = [\n        {\n            category: 'Software-Development'\n        },\n        {\n            category: 'Ux-Design'\n        },\n        {\n            category: 'Data-Science'\n        },\n        {\n            category: 'Product-Management'\n        }\n    ]\n    const [catList, setCatList] = useState(roleCategory);\n    const [cat, setCat] = useState(null);\n\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const timedateData = {\n        TimeDate: null,\n    };\n    const [selectedDate, handleDateChange] = useState([timedateData]);\n    const [formData, setFormData] = useState(menteeData);\n    const MenteeReq = () => {\n        props.history.push('/mentee-req');\n    }\n    const handleTextChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.id]: event.target.value\n        });\n    };\n\n    const addDateTimePicker = () => {\n        const selectedDateCopy = JSON.parse(JSON.stringify(selectedDate));\n        selectedDateCopy.push({\n            TimeDate: null\n        });\n        handleDateChange(selectedDateCopy);\n    };\n    const deleteDateTimePicker = (e, index) => {\n        const selectedDateCopy = JSON.parse(JSON.stringify(selectedDate));\n        selectedDateCopy.splice(index, 1);\n        handleDateChange(selectedDateCopy);\n    };\n    const onDateTimeChange = (e, index) => {\n        const selectedDateCopy = JSON.parse(JSON.stringify(selectedDate));\n        selectedDateCopy[index].TimeDate = e;\n        handleDateChange(selectedDateCopy);\n    }\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/mentor/' + id, {\n            headers: headers\n        })\n            .then(function (response) {\n                const menteeData = {\n                    jobTitle: response.data.user_data.job_title,\n                    pricePerSession: response.data.user_data.price,\n                    bio: response.data.user_data.bio,\n                    company: response.data.user_data.company,\n                    tags: response.data.user_data.tags.toString(),\n                    experience: response.data.user_data.experience,\n                    graduatedAt: response.data.user_data.college,\n                    mobileNumber: response.data.user_data.mobile_number,\n                };\n                handleDateChange(response.data.user_data.date_time);\n                setFormData(menteeData);\n                setCat({category:response.data.user_data.category});\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    const submitData = () => {\n        const tagData = formData.tags.split(',');\n        const data = {\n            job_title: formData.jobTitle,\n            company: formData.company,\n            category: cat.category,\n            tags: tagData,\n            price: formData.pricePerSession,\n            experience: formData.experience,\n            college: formData.graduatedAt,\n            bio: formData.bio,\n            mobile_number: formData.mobileNumber,\n            profile_picture: \"\",\n            linkedin: \"\",\n            date_time: (selectedDate),\n        }\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken');\n        const headers = {\n            'Content-Type': 'application/json',\n            'id': id,\n            'token': token\n        };\n\n\n        axios.post('/mentor/update', data, {\n            headers: headers\n        })\n            .then(function (response) {\n\n                props.history.push('/mentee-req');\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const renderDateTimePicker = () => {\n        return selectedDate.map((Seldate, id) => {\n            return (\n                <ListItem disableGutters key={`${Seldate}-${id}`} >\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDateTimePicker\n                            variant=\"inline\"\n                            ampm={false}\n                            label=\"Select Slot\"\n                            value={Seldate.TimeDate}\n                            onChange={e => onDateTimeChange(e, id)}\n                            onError={console.log}\n                            disablePast\n                            format=\"yyyy/MM/dd HH:mm\"\n                        />\n                    </MuiPickersUtilsProvider>\n\n                    {id === 0 ? (<ListItemSecondaryAction >\n                        <IconButton edge=\"end\" onClick={addDateTimePicker}>\n                            <AddIcon color=\"primary\" />\n                        </IconButton>\n                    </ListItemSecondaryAction>) : null}\n\n                    {id !== 0 ? (<ListItemSecondaryAction >\n                        <IconButton edge=\"end\" onClick={e => deleteDateTimePicker(e, id)} >\n                            <DeleteIcon color=\"primary\" />\n                        </IconButton>\n                    </ListItemSecondaryAction>) : null}\n                </ListItem>\n            )\n\n        });\n    };\n\n    return (\n\n        <Container>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography color=\"primary\" >Your Profile</Typography>\n                </Grid>\n                <Grid container alignItems=\"center\" spacing={2}>\n                    <Grid item xs={6} sm={1}>\n                        <Avatar alt=\"Remy Sharp\" src=\"/home/manish/Desktop/projectTester/src/assets/images/facebook.png\" className={classes.large} />\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <Button variant=\"contained\" color=\"primary\" >Upload Picture</Button>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Button variant=\"contained\" color=\"primary\" >Import From LinkedIn</Button>\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={MenteeReq}>Check Mentee Request</Button>\n                    </Grid>\n                </Grid>\n                <Grid item container spacing={2} sm={6}>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"jobTitle\"\n                                label=\"Job Title\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.jobTitle}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n\n                        <Autocomplete\n                            id=\"category\"\n                            value={cat}\n                            options={catList}\n                            getOptionLabel={option => option.category}\n                            onChange={(e, newValue) => setCat(newValue)}\n                            renderInput={params => (\n                                <TextField  {...params} label=\"Category\"  variant=\"outlined\" />\n                            )}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"pricePerSession\"\n                                label=\"Price per Session\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.pricePerSession}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                id=\"bio\"\n                                label=\"Bio*\"\n                                multiline\n                                rows={4}\n                                variant=\"outlined\"\n                                value={formData.bio}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                </Grid>\n                <Grid item container sm={6} spacing={2}>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"company\"\n                                label=\"Company\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.company}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"experience\"\n                                label=\"experience\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.experience}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"tags\"\n                                label=\"Tags\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.tags}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"graduatedAt\"\n                                label=\"Graduated At\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.graduatedAt}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                            <TextField\n                                required\n                                id=\"mobileNumber\"\n                                label=\"Mobile Number\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                value={formData.mobileNumber}\n                                onChange={handleTextChange}\n                            />\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <Grid item container justify=\"center\" alignContent=\"center\">\n                    <List style={{ display: \"contents\" }}>{renderDateTimePicker()}</List>\n                </Grid>\n\n\n                <Grid item container justify=\"center\" alignItems=\"center\" sm={12}>\n                    <Grid item xs={4} sm={3} >\n                        <Button variant=\"contained\" color=\"primary\">Edit</Button>\n                    </Grid>\n                    <Grid item xs={4} sm={3} >\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitData} >Submit</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\nexport default MentorProfile;\n\n","E:\\MyMentor\\client\\src\\components\\Mentee\\Login.js",["259"],"import React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport axios from \"axios\";\nimport { FormControl, TextField, Grid, Container, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport Students from '../../assets/images/students.png';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nconst Login = (props) => {\n    const menteeData = {\n        email: '',\n        password: '',\n        errorEmail: false,\n        errorPass: false,\n        email_error_text: null,\n        password_error_text: null,\n\n    };\n    const [formData, setFormData] = useState(menteeData);\n    const [EmailData, setEmailData] = useState();\n    const [validEmail, setValidEmail] = useState(false);\n    const [validPass, setValidPass] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n    const [open, setOpen] = useState(false);\n    useEffect(() => {\n        HandleButton();\n    }, [validEmail, validPass]);\n\n    const HandleButton = () => {\n        if (validEmail && validPass)\n            setBtnDisabled(false);\n    }\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = (value) => {\n        setOpen(false);\n\n    };\n\n    const Login = () => {\n        const data = {\n            email: formData.email,\n            password: formData.password\n        }\n        axios.post('/login/mentee', data)\n            .then(function (response) {\n                localStorage.setItem('Menteetoken', response.data.token);\n                localStorage.setItem('Menteeid', response.data.user_data.id);\n                props.history.push('/');\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const RedirectToMentor = () => {\n        props.history.push('/mentor-login');\n    }\n\n\n    const handleTextChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.id]: event.target.value\n        });\n    };\n\n    const handleForgotEmail = (event) => {\n        setEmailData(event.target.value);\n       \n    };\n    const ValidatePass = () => {\n        if (formData.password === \"\" || !formData.password) {\n            setFormData({\n                ...formData,\n                password_error_text: null\n            });\n        } else {\n            if (formData.password.length >= 6) {\n                setValidPass(true);\n                setFormData({\n                    ...formData,\n                    password_error_text: null,\n                    errorPass: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    password_error_text: \"Your password must be at least 6 characters\",\n                    errorPass: true,\n                });\n            }\n        }\n    }\n\n    const ValidateEmail = () => {\n        if (formData.email === \"\") {\n            setFormData({\n                ...formData,\n                email_error_text: null\n            });\n        } else {\n            if (validator.isEmail(formData.email)) {\n                setValidEmail(true);\n                setFormData({\n                    ...formData,\n                    email_error_text: null,\n                    errorEmail: false\n                });\n            } else {\n                setFormData({\n                    ...formData,\n                    email_error_text: \"Sorry, this is not a valid email\",\n                    errorEmail: true\n                });\n            }\n        }\n    }\n    const ForgotPassword = () => {\n        const data = {\n            email: EmailData,\n        }\n        \n        axios.post('/mentee/send-email', data)\n            .then(function (response) {\n                \n                setOpen(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    return (\n\n        <React.Fragment>\n            <Container>\n                <Grid container spacing={4}>\n                    <Grid item container sm={6} spacing={4} alignItems=\"center\" style={{ alignContent: \"center\" }}>\n                        <Grid item xs={12}>\n                            <Typography color=\"primary\" variant=\"h4\">Login as a Mentee</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={9}>\n                            <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                                <TextField\n                                    required\n                                    id=\"email\"\n                                    label=\"E-mail\"\n                                    color=\"primary\"\n                                    variant=\"filled\"\n                                    helperText={formData.email_error_text}\n                                    error={formData.errorEmail}\n                                    value={formData.email}\n                                    onChange={handleTextChange}\n                                    onBlur={ValidateEmail}\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={9}>\n                            <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                                <TextField\n                                    required\n                                    id=\"password\"\n                                    label=\"Password\"\n                                    color=\"primary\"\n                                    variant=\"filled\"\n                                    helperText={formData.password_error_text}\n                                    error={formData.errorPass}\n                                    value={formData.password}\n                                    onChange={handleTextChange}\n                                    onBlur={ValidatePass}\n                                />\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item container justify=\"center\" direction=\"column\" sm={9} alignItems=\"center\" spacing={1}>\n                            <Grid item   >\n                                <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={Login}>Login</Button>\n                            </Grid>\n                            <Grid item   >\n                                <Button variant=\"text\" color=\"primary\" onClick={handleClickOpen}>Forgot Password?</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\n\n                        <Grid item xs={12} sm={6}>\n                            <Typography color=\"primary\" variant=\"h5\">Are You a Mentor?</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={9}>\n                            <img alt=\"complex\" src={Students} style={{ maxWidth: \"75%\" }} />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Login here</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Dialog\n                open={open}\n                onClose={handleClose}>\n                <DialogTitle disableTypography style={{ backgroundColor: 'beige' }}>\n                    <div style={{ display: 'flex' }}>\n                        < CheckCircleSharpIcon color=\"primary\" style={{ width: '2em', height: '3em', paddingRight: '10px' }} />\n                        <h2>Enter The Email To Get The Reset Link</h2>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText >\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\n                            <TextField\n                                required\n                                id=\"Forgotemail\"\n                                label=\"E-mail\"\n                                color=\"primary\"\n                                variant=\"filled\"\n                                value={EmailData}\n                                onChange={handleForgotEmail}\n                            />\n                        </FormControl>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <Button onClick={() => handleClose('close')} color=\"primary\" variant='outlined'>\n                        Close\n                      </Button>\n\n                    <Button onClick={ForgotPassword} color=\"primary\" variant='outlined'>\n                        Send Reset Link\n                       </Button>\n\n\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\nexport default Login;","E:\\MyMentor\\client\\src\\components\\Mentor\\Dashboard.js",["260","261"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Button, Typography, Grid, Container, Paper, Avatar } from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport PublicIcon from '@material-ui/icons/Public';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport axios from \"axios\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#F1F9FF'\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n\n\n        [theme.breakpoints.down('sm')]: {\n            width: theme.spacing(8),\n            height: theme.spacing(8),\n        },\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n\n\n    },\n    successBtn: {\n        backgroundColor: '#4caf50',\n    },\n    paymentDir: {\n        justifyContent: 'flex-end',\n        [theme.breakpoints.down('sm')]: {\n            justifyContent: 'center'\n        },\n    },\n    borderStyling: {\n        borderWidth: '1px',\n        borderStyle: 'inset',\n        padding: '3px',\n        backgroundColor: '#FFFFFF'\n    }\n}));\n\nconst Dashboard = (props) => {\n    let FinalDateTime = [];\n    const MentorId = props.location.state.id;\n    const Mentortoken = localStorage.getItem('Mentortoken');\n    const Menteetoken = localStorage.getItem('Menteetoken');\n    const MenteeId = localStorage.getItem('Menteeid')\n    const theme = useTheme();\n    const isTablet = useMediaQuery(theme.breakpoints.down('sm'));\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n    const classes = useStyles();\n\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const [MentorData, setMentorData] = useState();\n    const [CallData, setCallData] = useState();\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    const getMentorData = () => {\n        let headers;\n        if (Menteetoken) {\n            headers = {\n                'Content-Type': 'application/json',\n                'token': Menteetoken\n            };\n        }\n        else if (Mentortoken) {\n            headers = {\n                'Content-Type': 'application/json',\n                'token': Mentortoken\n            };\n        }\n        axios.get('/mentor/' + MentorId, {\n            headers: headers\n        })\n            .then(function (response) {\n              \n                const avatarImage = response.data.user_data.name.toUpperCase().split('');\n                let bookedSlotsFinal = [];\n                let TotalSlotsFinal=[];\n                for (let i = 0; i < response.data.booked_slot.length; i++) {\n                    const check = (response.data.booked_slot[i].dates_time);\n                   let str = check.replace('\"', '');\n                    str = str.replace('\"', '');\n                    bookedSlotsFinal.push(str);\n                }\n                for (let i = 0; i < response.data.user_data.date_time.length; i++) {\n\n                    const check = (response.data.user_data.date_time[i]);\n                    let str = check.substring(check.indexOf(':') + 1);\n                    str = str.replace('}', '');\n                    str = str.replace('\"', '');\n                    str = str.replace('\"', '');\n                    TotalSlotsFinal.push(str);\n                }\n                var filteredslots = TotalSlotsFinal.filter((word) => !bookedSlotsFinal.includes(word));\n               \n                for (let i = 0; i < filteredslots.length; i++) {\n                   let str = new Date(filteredslots[i])\n                    let yr = str.getFullYear();\n                    let mn = str.getMonth();\n                    let dt = str.getDate();\n                    let hr = str.getHours();\n                    let min = str.getMinutes();\n                    FinalDateTime.push({ year: yr, month: mn + 1, date: dt, hour: hr, min: min, databaseDate: str, status: false });\n                }\n\n                const mentorData = {\n                    name: capitalize(response.data.user_data.name),\n                    jobTitle: response.data.user_data.job_title,\n                    bio: response.data.user_data.bio,\n                    company: response.data.user_data.company,\n                    tags: response.data.user_data.tags,\n                    dateTime: FinalDateTime,\n                    image: avatarImage\n                };\n                setMentorData(mentorData)\n               \n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    const onSelectSlot = (event, index, id) => {\n        const calldata = {\n            mentor_id: MentorId,\n            mentee_id: MenteeId,\n            dates_time: JSON.stringify(index.databaseDate),\n            booking_status: \"pending\"\n        }\n      \n        const dataSlot = { ...MentorData };\n        for (let i = 0; i < dataSlot.dateTime.length; i++) {\n            if (i !== id) {\n                dataSlot.dateTime[i].status = false;\n            }\n        }\n        dataSlot.dateTime[id].status = true;\n        setMentorData(dataSlot);\n        setCallData(calldata);\n    }\n    const SlotBooked = () => {\n      \n        let headers;\n        if (Menteetoken) {\n            headers = {\n                'Content-Type': 'application/json',\n                'token': Menteetoken\n            };\n        }\n        else if (Mentortoken) {\n            headers = {\n                'Content-Type': 'application/json',\n                'token': Mentortoken\n            };\n        }\n\n        axios.post('/call', CallData, {\n            headers: headers\n        })\n            .then(function (response) {\n               \n                props.history.push('/book-slot');\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n\n    const renderSlots = () => {\n        return MentorData.dateTime.map((date, id) => {\n            if (date.min.toString().length === 1) {\n                return (\n                    <Grid item style={{ cursor: 'pointer' }}>\n                        <Button\n                            disabled={date.status}\n                            color=\"primary\"\n                            onClick={e => onSelectSlot(e, date, id)}\n                            className={classes.borderStyling} >\n                            {date.year}/{date.month}/{date.date}-{'   '}{date.hour}:0{date.min} - {(date.hour) + 1}:0{date.min}</Button>\n                    </Grid>\n                )\n            }\n            else if (date.min.toString().length !== 1) {\n                return (\n                    <Grid item style={{ cursor: 'pointer' }}>\n                        <Button\n                            disabled={date.status}\n                            onClick={e => onSelectSlot(e, date, id)}\n                            color=\"primary\" className={classes.borderStyling} >{date.year}/{date.month}/{date.date}-{'   '}{date.hour}:{date.min} - {(date.hour) + 1}:{date.min}</ Button>\n                    </Grid>\n                )\n            }\n        });\n    };\n\n\n    return (\n        MentorData ? (<Container style={{ marginBottom: \"40px\" }}>\n            {isTablet ? (\n                <Grid container sm={12} spacing={2}>\n                    <Grid container sm={12} xs={12} >\n                        <Paper style={{ display: \"flex\", flexDirection: 'column' }} classes={{ root: classes.root }}>\n                            <Container>\n                                <Grid item container direction=\"row\" style={{ marginTop: \"15px\", marginBottom: \"15px\" }} spacing={1}>\n                                    <Grid item sm={2} xs={6}>\n                                        <Avatar src=\"\" className={classes.large} >\n                                            <Typography color=\"primary\" >{MentorData.image[0]}{MentorData.image[1]}</Typography>\n                                        </Avatar>\n                                    </Grid>\n                                    <Grid item sm={4} xs={6} style={{ alignSelf: 'center' }}>\n                                        <Typography color=\"primary\" variant=\"h6\">{MentorData.name}</Typography>\n                                    </Grid>\n                                    <Grid item sm={6} xs={12} spacing={4} style={{ alignSelf: 'center' }}>\n                                        <Typography color=\"primary\" variant=\"h6\">{MentorData.jobTitle} At {MentorData.company}</Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container xs={12} sm={12} direction=\"row\" justify=\"space-between\">\n                                    <Grid item>\n                                        {MentorData.tags && MentorData.tags[0] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[0]}</Typography> : null}\n                                    </Grid>\n                                    <Grid item>\n                                        {MentorData.tags && MentorData.tags[1] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[1]}</Typography> : null}\n                                    </Grid>\n                                    {!isMobile ? (<Grid item>\n                                        {MentorData.tags && MentorData.tags[2] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[2]}</Typography> : null}\n                                    </Grid>) : null}\n                                </Grid>\n\n                                <Grid item sm={12} style={{ marginTop: '10px' }}>\n                                    <Typography color=\"primary\" >{MentorData.bio}</Typography>\n                                </Grid>\n                                <Grid item container direction=\"row\" style={{ margin: \"15px 0 15px 0\" }}>\n                                    <Grid item container sm={8} xs={12} direction=\"row\" justify=\"space-between\">\n                                        <Grid item>\n                                            <InstagramIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <FacebookIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <TwitterIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <PublicIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <LinkedInIcon />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid item sm={12} style={{ marginTop: '30px' }}>\n                                    <Typography color=\"primary\" variant=\"h6\" >Slots Available</Typography>\n                                </Grid>\n                                <Grid item container sm={12} direction=\"row\" spacing={2} style={{ marginBottom: '30px', marginTop: \"10px\" }}>\n                                    <Grid item container sm={12} justify=\"space-between\" spacing={2}>\n                                        {renderSlots()}\n                                    </Grid>\n                                    <Grid item sm={12} style={{ paddingLeft: \"10%\" }}>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={SlotBooked}>Book</Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            )\n                :\n\n\n                (<Grid container sm={12} justify=\"center\">\n                    <Grid item sm={2} container justify=\"flex-end\" alignContent=\"center\">\n                        <Avatar src=\"\" className={classes.large} >\n                            <Typography color=\"primary\" variant=\"h2\">{MentorData.image[0]}{MentorData.image[1]}</Typography>\n                        </Avatar>\n                    </Grid>\n                    <Grid item sm={8} >\n                        <Paper style={{ display: \"flex\", flexDirection: 'column' }} classes={{ root: classes.root }}>\n                            <Container>\n                                <Grid item container direction=\"row\" style={{ marginTop: \"15px\" }}>\n                                    <Grid item sm={4} >\n                                        <Typography color=\"primary\" variant=\"h6\">{MentorData.name}</Typography>\n                                    </Grid>\n                                    <Grid item container sm={8} direction=\"row\" justify=\"space-evenly\">\n                                        <Grid item>\n                                            {MentorData.tags && MentorData.tags[0] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[0]}</Typography> : null}\n                                        </Grid>\n                                        <Grid item>\n                                            {MentorData.tags && MentorData.tags[1] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[1]}</Typography> : null}\n                                        </Grid>\n                                        <Grid item>\n                                            {MentorData.tags && MentorData.tags[2] ? <Typography color=\"primary\" className={classes.borderStyling}>{MentorData.tags[2]}</Typography> : null}\n                                        </Grid>\n\n                                    </Grid>\n                                </Grid>\n\n                                <Grid item sm={12}>\n                                    <Typography color=\"primary\" variant=\"h6\">{MentorData.jobTitle} At {MentorData.company}</Typography>\n                                </Grid>\n                                <Grid item sm={12} >\n                                    <Typography color=\"primary\" >{MentorData.bio}</Typography>\n                                </Grid>\n                                <Grid item container direction=\"row\" style={{ margin: \"15px 0 15px 0\" }}>\n                                    <Grid item container sm={8} xs={6} direction=\"row\" justify=\"space-between\">\n                                        <Grid item>\n                                            <InstagramIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <FacebookIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <TwitterIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <PublicIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <LinkedInIcon />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item sm={12} style={{ marginTop: '30px' }}>\n                                    <Typography color=\"primary\" variant=\"h6\" >Slots Available</Typography>\n                                </Grid>\n\n\n                                <Grid item container sm={12} direction=\"row\" style={{ marginBottom: '30px', marginTop: \"10px\" }}>\n                                    <Grid item container sm={8} justify=\"space-between\" spacing={2}>\n                                        {renderSlots()}\n                                    </Grid>\n                                    <Grid item sm={4} style={{ paddingLeft: \"10%\" }}>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={SlotBooked}>Book</Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </Paper>\n                    </Grid>\n                </Grid>)}\n        </Container>) : null\n\n    )\n}\nexport default Dashboard;","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\DataScience.js",["262","263","264","265","266"],"import React, { useState, useEffect } from 'react';\nimport Design from '../Find-My-Mentor/CardDesign'\nimport axios from \"axios\";\nimport Loader from '../../hoc/Loader';\nimport Typography from '@material-ui/core/Typography';\nconst DataScience = (props) => {\n    const [mentorData, selectMentorData] = useState();\n    const [loading, setLoading] = useState(true);\n    let ProfileData = <Loader />;\n    let EmptyData;\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/all/mentor')\n            .then(function (response) {\n                selectMentorData(response.data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    if (mentorData !== undefined) {\n        const result = mentorData.filter(data => data.category === 'Data-Science');\n        ProfileData = result.map((index) => {\n            return (\n                <Design\n                    keyId={index.id}\n                    name={index.name}\n                    image={index.profile_picture}\n                    bio={index.bio}\n                    price={index.price}\n                    skills={index.tags}\n                    position={index.job_title}\n                />\n            );\n        });\n        if (ProfileData.length == 0) {\n            EmptyData = <div style={{ display: \"flex\", justifyContent: \"center\" }}> <Typography color=\"primary\" variant=\"h4\">Sorry! No Records Found</Typography></div>\n\n        }\n    }\n\n    return (\n        <div style={{ minHeight: \"105px\" }}>{ProfileData.length == 0 ? EmptyData : ProfileData}</div>\n    )\n}\nexport default DataScience;","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\ProductManagement.js",["267","268","269","270","271"],"import React, { useState, useEffect } from 'react';\nimport Design from '../Find-My-Mentor/CardDesign'\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport Loader from '../../hoc/Loader';\nconst ProdMang = (props) => {\n    const [mentorData, selectMentorData] = useState();\n    const [loading, setLoading] = useState(true);\n    let ProfileData = <Loader />;\n    let EmptyData;\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/all/mentor')\n            .then(function (response) {\n                selectMentorData(response.data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n\n    if (mentorData !== undefined) {\n        const result = mentorData.filter(data => data.category === 'Product-Management');\n        ProfileData = result.map((index) => {\n            return (\n                <Design\n                    keyId={index.id}\n                    name={index.name}\n                    image={index.profile_picture}\n                    bio={index.bio}\n                    price={index.price}\n                    skills={index.tags}\n                    position={index.job_title}\n                />\n            );\n        });\n        if (ProfileData.length == 0) {\n            EmptyData = <div style={{ display: \"flex\", justifyContent: \"center\" }}> <Typography color=\"primary\" variant=\"h4\">Sorry! No Records Found</Typography></div>\n\n        }\n    }\n    return (\n        <div style={{ minHeight: \"105px\" }}>{ProfileData.length == 0 ? EmptyData : ProfileData}</div>\n    )\n}\nexport default ProdMang;","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\All.js",["272","273","274","275","276"],"import React, { useState, useEffect } from 'react';\nimport Design from '../Find-My-Mentor/CardDesign'\nimport Loader from '../../hoc/Loader';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\n\nconst All = (props) => {\n    const [mentorData, selectMentorData] = useState();\n    const [loading, setLoading] = useState(true);\n    let ProfileData = <Loader />;\n    let EmptyData;\n    useEffect(() => {\n        getMentorData();\n    }, []);\n\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/all/mentor')\n            .then(function (response) {\n                selectMentorData(response.data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    if (mentorData !== undefined) {\n        ProfileData = mentorData.map((index) => {\n            return (\n                <Design\n                    keyId={index.id}\n                    name={index.name}\n                    image={index.profile_picture}\n                    bio={index.bio}\n                    price={index.price}\n                    skills={index.tags}\n                    position={index.job_title}\n                />\n            );\n        });\n        if (ProfileData.length == 0) {\n            EmptyData = <div style={{ display: \"flex\", justifyContent: \"center\" }}> <Typography color=\"primary\" variant=\"h4\">Sorry! No Records Found</Typography></div>\n\n        }\n    }\n\n    return (\n        <div style={{ minHeight: \"105px\" }}>{ProfileData.length == 0 ? EmptyData : ProfileData}</div>\n    )\n}\nexport default All;","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js",["277","278","279","280","281"],"import React, { useState, useEffect } from 'react';\nimport Design from '../Find-My-Mentor/CardDesign'\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\nimport Loader from '../../hoc/Loader';\nconst Sdev = (props) => {\n    const [mentorData, selectMentorData] = useState();\n    const [loading, setLoading] = useState(true);\n    let ProfileData = <Loader />;\n    let EmptyData;\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token = localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/all/mentor')\n            .then(function (response) {\n                selectMentorData(response.data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n    if (mentorData !== undefined) {\n        const result = mentorData.filter(data => data.category === 'Software-Development');\n        ProfileData = result.map((index) => {\n            return (\n                <Design\n                    keyId={index.id}\n                    name={index.name}\n                    image={index.profile_picture}\n                    bio={index.bio}\n                    price={index.price}\n                    skills={index.tags}\n                    position={index.job_title}\n                />\n            );\n        });\n        if(ProfileData.length==0)\n        {\n         EmptyData= <div style={{display:\"flex\", justifyContent:\"center\"}}> <Typography color=\"primary\" variant=\"h4\">Sorry! No Records Found</Typography></div>\n         \n        }\n    }\n    return (\n        <div style={{ minHeight: \"105px\" }}>{ProfileData.length==0? EmptyData:ProfileData}</div>\n    )\n}\nexport default Sdev;","E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\UxDesign.js",["282","283","284","285","286"],"import React, {useState, useEffect} from 'react';\nimport Design from '../Find-My-Mentor/CardDesign'\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport Loader from '../../hoc/Loader';\nconst UxDesign = (props) => {\n    const [mentorData, selectMentorData] = useState();\n    const [loading, setLoading] = useState(true);\n    let ProfileData = <Loader />;\n    let EmptyData;\n    useEffect(() => {\n        getMentorData();\n    }, []);\n    const getMentorData = () => {\n        const id = localStorage.getItem('Mentorid');\n        const token= localStorage.getItem('Mentortoken')\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': token\n        };\n        axios.get('/all/mentor')\n            .then(function (response) {\n                selectMentorData(response.data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n\n    if(mentorData!==undefined)\n    {\n        const result = mentorData.filter(data => data.category === 'Ux-Design');\n            ProfileData = result.map((index) => {\n            return (\n                <Design\n                keyId={index.id}\n                name={index.name}\n                image={index.profile_picture}\n                bio={index.bio}\n                price={index.price}\n                skills={index.tags}\n                position={index.job_title}\n                />\n            );\n        });\n       if(ProfileData.length==0)\n       {\n        EmptyData= <div style={{display:\"flex\", justifyContent:\"center\"}}> <Typography color=\"primary\" variant=\"h4\">Sorry! No Records Found</Typography></div>\n        \n       }\n    }\n    return (\n        <div style={{ minHeight: \"105px\" }}>{ProfileData.length==0? EmptyData:ProfileData}</div>\n    )\n}\nexport default UxDesign;","E:\\MyMentor\\client\\src\\hoc\\Auxillary\\Auxillary.js",[],"E:\\MyMentor\\client\\src\\components\\Footer\\Footer.js",[],"E:\\MyMentor\\client\\src\\components\\Header\\Header.js",[],"E:\\MyMentor\\client\\src\\components\\Find-My-Mentor\\CardDesign.js",[],["287","288"],"E:\\MyMentor\\client\\src\\hoc\\Loader.js",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":25,"column":8,"nodeType":"295","endLine":25,"endColumn":31,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"294","line":25,"column":8,"nodeType":"295","endLine":25,"endColumn":31,"suggestions":"297"},{"ruleId":"293","severity":1,"message":"294","line":31,"column":8,"nodeType":"295","endLine":31,"endColumn":48,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"294","line":26,"column":8,"nodeType":"295","endLine":26,"endColumn":31,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":11,"column":15,"nodeType":"302","messageId":"303","endLine":11,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":13,"column":15,"nodeType":"302","messageId":"303","endLine":13,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":11,"column":15,"nodeType":"302","messageId":"303","endLine":11,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":13,"column":15,"nodeType":"302","messageId":"303","endLine":13,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":13,"column":15,"nodeType":"302","messageId":"303","endLine":13,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":15,"column":15,"nodeType":"302","messageId":"303","endLine":15,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":11,"column":15,"nodeType":"302","messageId":"303","endLine":11,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":13,"column":15,"nodeType":"302","messageId":"303","endLine":13,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":11,"column":15,"nodeType":"302","messageId":"303","endLine":11,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":13,"column":15,"nodeType":"302","messageId":"303","endLine":13,"endColumn":22},{"ruleId":"289","replacedBy":"305"},{"ruleId":"291","replacedBy":"306"},{"ruleId":"293","severity":1,"message":"307","line":60,"column":8,"nodeType":"295","endLine":60,"endColumn":14,"suggestions":"308"},{"ruleId":"293","severity":1,"message":"309","line":61,"column":8,"nodeType":"295","endLine":61,"endColumn":10,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":184,"column":51,"nodeType":"313","messageId":"314","endLine":184,"endColumn":53},{"ruleId":"300","severity":1,"message":"315","line":19,"column":13,"nodeType":"302","messageId":"303","endLine":19,"endColumn":20},{"ruleId":"289","replacedBy":"316"},{"ruleId":"291","replacedBy":"317"},{"ruleId":"293","severity":1,"message":"294","line":26,"column":8,"nodeType":"295","endLine":26,"endColumn":31,"suggestions":"318"},{"ruleId":"300","severity":1,"message":"315","line":19,"column":13,"nodeType":"302","messageId":"303","endLine":19,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":31,"column":8,"nodeType":"295","endLine":31,"endColumn":48,"suggestions":"319"},{"ruleId":"293","severity":1,"message":"294","line":25,"column":8,"nodeType":"295","endLine":25,"endColumn":31,"suggestions":"320"},{"ruleId":"293","severity":1,"message":"307","line":60,"column":8,"nodeType":"295","endLine":60,"endColumn":14,"suggestions":"321"},{"ruleId":"300","severity":1,"message":"322","line":72,"column":21,"nodeType":"302","messageId":"303","endLine":72,"endColumn":31},{"ruleId":"293","severity":1,"message":"294","line":25,"column":8,"nodeType":"295","endLine":25,"endColumn":31,"suggestions":"323"},{"ruleId":"293","severity":1,"message":"309","line":61,"column":8,"nodeType":"295","endLine":61,"endColumn":10,"suggestions":"324"},{"ruleId":"311","severity":1,"message":"312","line":184,"column":51,"nodeType":"313","messageId":"314","endLine":184,"endColumn":53},{"ruleId":"300","severity":1,"message":"325","line":8,"column":12,"nodeType":"302","messageId":"303","endLine":8,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":15,"column":15,"nodeType":"302","messageId":"303","endLine":15,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":17,"column":15,"nodeType":"302","messageId":"303","endLine":17,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":46,"column":32,"nodeType":"328","messageId":"329","endLine":46,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":53,"column":65,"nodeType":"328","messageId":"329","endLine":53,"endColumn":67},{"ruleId":"300","severity":1,"message":"325","line":8,"column":12,"nodeType":"302","messageId":"303","endLine":8,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":15,"column":15,"nodeType":"302","messageId":"303","endLine":15,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":17,"column":15,"nodeType":"302","messageId":"303","endLine":17,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":48,"column":32,"nodeType":"328","messageId":"329","endLine":48,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":54,"column":65,"nodeType":"328","messageId":"329","endLine":54,"endColumn":67},{"ruleId":"300","severity":1,"message":"325","line":9,"column":12,"nodeType":"302","messageId":"303","endLine":9,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":17,"column":15,"nodeType":"302","messageId":"303","endLine":17,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":19,"column":15,"nodeType":"302","messageId":"303","endLine":19,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":47,"column":32,"nodeType":"328","messageId":"329","endLine":47,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":54,"column":65,"nodeType":"328","messageId":"329","endLine":54,"endColumn":67},{"ruleId":"300","severity":1,"message":"325","line":8,"column":12,"nodeType":"302","messageId":"303","endLine":8,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":15,"column":15,"nodeType":"302","messageId":"303","endLine":15,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":17,"column":15,"nodeType":"302","messageId":"303","endLine":17,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":47,"column":30,"nodeType":"328","messageId":"329","endLine":47,"endColumn":32},{"ruleId":"326","severity":1,"message":"327","line":54,"column":64,"nodeType":"328","messageId":"329","endLine":54,"endColumn":66},{"ruleId":"300","severity":1,"message":"325","line":8,"column":12,"nodeType":"302","messageId":"303","endLine":8,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":15,"column":15,"nodeType":"302","messageId":"303","endLine":15,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":17,"column":15,"nodeType":"302","messageId":"303","endLine":17,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":49,"column":29,"nodeType":"328","messageId":"329","endLine":49,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":56,"column":64,"nodeType":"328","messageId":"329","endLine":56,"endColumn":66},{"ruleId":"289","replacedBy":"330"},{"ruleId":"291","replacedBy":"331"},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'HandleButton'. Either include it or remove the dependency array.","ArrayExpression",["334"],["335"],["336"],["337"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'headers' is assigned a value but never used.",["332"],["333"],"React Hook useEffect has a missing dependency: 'getMenteeData'. Either include it or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'getMentorData'. Either include it or remove the dependency array.",["339"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'history' is assigned a value but never used.",["332"],["333"],["340"],["341"],["342"],["343"],"'setCatList' is assigned a value but never used.",["344"],["345"],"'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["332"],["333"],"no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"346","fix":"348"},{"desc":"349","fix":"350"},{"desc":"346","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"346","fix":"356"},{"desc":"349","fix":"357"},{"desc":"346","fix":"358"},{"desc":"352","fix":"359"},{"desc":"346","fix":"360"},{"desc":"354","fix":"361"},"Update the dependencies array to be: [HandleButton, validEmail, validPass]",{"range":"362","text":"363"},{"range":"364","text":"363"},"Update the dependencies array to be: [validEmail, validPass, validConfirmPass, HandleButton]",{"range":"365","text":"366"},{"range":"367","text":"363"},"Update the dependencies array to be: [getMenteeData, slot]",{"range":"368","text":"369"},"Update the dependencies array to be: [getMentorData]",{"range":"370","text":"371"},{"range":"372","text":"363"},{"range":"373","text":"366"},{"range":"374","text":"363"},{"range":"375","text":"369"},{"range":"376","text":"363"},{"range":"377","text":"371"},[1030,1053],"[HandleButton, validEmail, validPass]",[1031,1054],[1045,1085],"[validEmail, validPass, validConfirmPass, HandleButton]",[889,912],[1874,1880],"[getMenteeData, slot]",[1927,1929],"[getMentorData]",[864,887],[1015,1055],[1006,1029],[1815,1821],[1007,1030],[1867,1869]]